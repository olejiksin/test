[{"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\index.tsx":"1","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\storeConf.ts":"2","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\containers\\login.tsx":"3","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\containers\\helpPage.tsx":"4","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\containers\\mainPage.tsx":"5","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\regPage.tsx":"6","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\reducers\\appReducer.tsx":"7","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\appsControl.tsx":"8","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\dockerfileList.tsx":"9","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\dbList.tsx":"10","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\loader.tsx":"11","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\dbControl.tsx":"12","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\actions\\actions.tsx":"13","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\appsList.tsx":"14","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\types\\actionTypes.ts":"15"},{"size":1078,"mtime":1620209139590,"results":"16","hashOfConfig":"17"},{"size":613,"mtime":1609175842907,"results":"18","hashOfConfig":"17"},{"size":2486,"mtime":1620399352836,"results":"19","hashOfConfig":"17"},{"size":6887,"mtime":1621947725619,"results":"20","hashOfConfig":"17"},{"size":5960,"mtime":1622193627296,"results":"21","hashOfConfig":"17"},{"size":2600,"mtime":1620121652295,"results":"22","hashOfConfig":"17"},{"size":3954,"mtime":1622154038748,"results":"23","hashOfConfig":"17"},{"size":14429,"mtime":1622547911054,"results":"24","hashOfConfig":"17"},{"size":2802,"mtime":1618574120185,"results":"25","hashOfConfig":"17"},{"size":2774,"mtime":1622154161514,"results":"26","hashOfConfig":"17"},{"size":315,"mtime":1620136026804,"results":"27","hashOfConfig":"17"},{"size":6165,"mtime":1622154951206,"results":"28","hashOfConfig":"17"},{"size":7693,"mtime":1622544035848,"results":"29","hashOfConfig":"17"},{"size":5649,"mtime":1622415533032,"results":"30","hashOfConfig":"17"},{"size":2867,"mtime":1622154038737,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1td4ipe",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\index.tsx",[],["64","65"],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\storeConf.ts",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\containers\\login.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\containers\\helpPage.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\containers\\mainPage.tsx",["66"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {App, AppState, AppWithServerData, DataBaseWithServer, MicroAppWithServerData} from \"../types/types\";\r\nimport {\r\n    addNewApp, addNewDB, addNewMicroApp,\r\n    editApp, exit,\r\n    getMainData,\r\n    removeApp, removeDB,\r\n    startOrStopApp, startOrStopDB\r\n} from \"../actions/actions\";\r\nimport {AppList} from \"../components/appsList\";\r\nimport {AppControl} from \"../components/appsControl\";\r\nimport {Loader} from '../components/loader';\r\nimport {DbList} from \"../components/dbList\";\r\nimport {DBControl} from \"../components/dbControl\";\r\nimport {storage} from \"../reducers/appReducer\";\r\n\r\n\r\nconst {useEffect} = React;\r\n\r\ninterface Props {\r\n    addNewDB: (file: any, db: DataBaseWithServer, login: string) => void;\r\n    getMainData: (login: string) => void;\r\n    addNewApp: (app: AppWithServerData, login: string) => void;\r\n    addNewMicroApp: (app: MicroAppWithServerData, login: string) => void;\r\n    removeApp: (id: string) => void;\r\n    editApp: (app: App) => void;\r\n    startOrStopApp: (id: string) => void;\r\n    exit: (props: any) => void;\r\n    state: AppState;\r\n    removeDB: (id: string) => void;\r\n    startOrStopDB: (id: string) => void;\r\n}\r\n\r\nconst {useState} = React;\r\n\r\nconst MainPage: React.FC<Props> = props => {\r\n\r\n        const [page, setPage] = useState('1');\r\n        const [isLoading, setIsLoading] = useState(true);\r\n        const [newModal, setNewModal] = useState(false);\r\n\r\n        useEffect(() => {\r\n            const {currentUser} = props.state;\r\n            if (storage.username) {\r\n                setTimeout(() => {\r\n                    props.getMainData(currentUser);\r\n                    setIsLoading(false);\r\n                }, 500)\r\n            } else {\r\n                // @ts-ignore\r\n                props.history.push('/login');\r\n            }\r\n        }, []);\r\n\r\n        const doEx = () => {\r\n            props.exit(props);\r\n        };\r\n        const EMPTY: any = [];\r\n\r\n\r\n        const changePage = (e: React.SyntheticEvent, page: string) => {\r\n            setPage(page);\r\n            setNewModal(false);\r\n        }\r\n\r\n        const showHideController = (e: React.SyntheticEvent) => {\r\n            setNewModal(true);\r\n        }\r\n        const moveUp = () => {\r\n            let animTime = 300;\r\n            let frames = 20;\r\n            let scrollBy = parseInt((document.documentElement.scrollTop / frames).toFixed());\r\n            let scroller = setInterval(() => {\r\n                if (document.documentElement.scrollTop - scrollBy > 0) {\r\n                    window.scrollBy(0, -scrollBy);\r\n                } else {\r\n                    window.scrollTo(0, 0)\r\n                    clearInterval(scroller);\r\n                }\r\n            }, animTime / frames)\r\n        }\r\n\r\n        return (\r\n            <div className=\"main-main\">\r\n                <div className={'header'} style={{background: 'white'}}>\r\n                    <Link to={'/help/'} className={'btn'}>Help</Link>\r\n                    <Link to={`/main/${props.state.currentUser}`} className={'btn btn-selected'}>Main page</Link>\r\n                    <Link to={'/login/'} onClick={() => doEx()} className={'btn'}>Exit</Link>\r\n                </div>\r\n                <div className=\"header-main\">\r\n                    <button className={page === '1' ? 'header-link  header-link-selected' : 'header-link'}\r\n                            onClick={(e) => changePage(e, '1')}>App\r\n                        list\r\n                    </button>\r\n                    <button className={page === '2' ? 'header-link header-link-selected' : 'header-link'}\r\n                            onClick={(e) => changePage(e, '2')}>Database list\r\n                    </button>\r\n                    <button className={newModal === true ? 'header-link header-link-selected' : 'header-link'}\r\n                            onClick={(e) => showHideController(e)}>{page === '1' ? 'Add new app' : 'Add new db'}</button>\r\n                </div>\r\n                {isLoading !== true ?\r\n                    page === '1' ?\r\n                        <div>\r\n                            {newModal === true ?\r\n                                <AppControl deployStatus={props.state.deployStatus} addNewApp={props.addNewApp}\r\n                                            addNewMicroApp={props.addNewMicroApp}\r\n                                            currentUser={props.state.currentUser}/>\r\n                                :\r\n                                <AppList microservices={props.state.profile.microservices || EMPTY}\r\n                                         apps={props.state.profile.appList || EMPTY} editApp={props.editApp}\r\n                                         removeApp={props.removeApp}\r\n                                         startOrStopApp={props.startOrStopApp}/>\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {newModal === true ?\r\n                                <DBControl currentUser={props.state.currentUser} addNewDB={props.addNewDB}/> :\r\n                                <DbList startOrStopDB={props.startOrStopDB}\r\n                                        databases={props.state.profile.databases || EMPTY} removeDB={props.removeDB}/>\r\n                            }\r\n                        </div>\r\n                    :\r\n                    <Loader/>}\r\n                <div className=\"up-div\" onClick={() => moveUp()}/>\r\n            </div>\r\n        );\r\n    }\r\n;\r\n\r\n\r\nconst mapStateToProps = (state: any) => (\r\n    {\r\n        state: state.appReducer\r\n    }\r\n);\r\n\r\n\r\nconst actions = {\r\n        getMainData,\r\n        addNewDB,\r\n        addNewApp,\r\n        removeApp,\r\n        editApp,\r\n        exit,\r\n        startOrStopApp,\r\n        removeDB,\r\n        startOrStopDB,\r\n        addNewMicroApp\r\n    }\r\n;\r\n\r\nexport default connect(mapStateToProps, actions)(MainPage);\r\n","C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\regPage.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\reducers\\appReducer.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\appsControl.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\dockerfileList.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\dbList.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\loader.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\dbControl.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\actions\\actions.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\components\\appsList.tsx",[],"C:\\Users\\oleji\\Desktop\\dipppo\\diplom\\proj\\src\\types\\actionTypes.ts",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":55,"column":12,"nodeType":"73","endLine":55,"endColumn":14,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [props]",{"range":"80","text":"81"},[1897,1899],"[props]"]